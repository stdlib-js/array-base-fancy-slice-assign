// Copyright (c) 2024 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
/// <reference types="./index.d.ts" />
import e from"https://cdn.jsdelivr.net/gh/stdlib-js/array-base-assert-is-mostly-safe-data-type-cast@v0.1.0-esm/index.mjs";import t from"https://cdn.jsdelivr.net/gh/stdlib-js/slice-base-normalize-slice@v0.1.0-esm/index.mjs";import s from"https://cdn.jsdelivr.net/gh/stdlib-js/slice-base-length@v0.1.1-esm/index.mjs";import r from"https://cdn.jsdelivr.net/gh/stdlib-js/array-dtype@v0.1.0-esm/index.mjs";import{ndarray as a}from"https://cdn.jsdelivr.net/gh/stdlib-js/blas-base-gcopy@v0.1.0-esm/index.mjs";import i from"https://cdn.jsdelivr.net/gh/stdlib-js/string-format@v0.1.1-esm/index.mjs";function n(n,d,l,o){var m,p,h,c,g,j,v;if(h=r(n)||"generic",c=r(d)||"generic",m=n.length,p=d.length,!e(h,c))throw new TypeError(i("invalid argument. Input array values cannot be safely cast to the output array data type. Data types: [%s, %s].",h,c));if((g=t(l,p,!0)).code){if(o)throw new RangeError(i("invalid argument. Slice exceeds array bounds. Array length: %d.",p));g=t(l,p,!1)}if(v=s(g),1===m)j=0;else{if(m!==v)throw new Error(i("invalid argument. Input array and the output array slice are broadcast incompatible. Array length: %u. Desired length: %u.",m,v));j=1}return a(v,n,j,0,d,g.step,g.start),d}export{n as default};
//# sourceMappingURL=index.mjs.map
